{
  "name": "Carouselview",
  "tagline": "A simple library to add carousel view in android app.",
  "body": "<p align=\"center\"><img src=\"https://raw.githubusercontent.com/sayyam/carouselview/master/sample/src/main/assets/carousel_baner.jpg\"></p>\r\n\r\nCarouselView\r\n=======\r\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-CarouselView-green.svg?style=true)](https://android-arsenal.com/details/1/3289)\r\n\r\nA simple yet flexible library to add carousel view in your android application.\r\n\r\n\r\n<img src=\"https://raw.githubusercontent.com/sayyam/carouselview/master/sample/src/main/assets/carousel_gif.gif\" title=\"sample\" width=\"500\" height=\"460\" />\r\n\r\n\r\nDownload\r\n--------\r\n####Gradle:\r\n```groovy\r\ncompile 'com.synnapps:carouselview:0.0.7'\r\n```\r\n####Maven:\r\n```xml\r\n<dependency>\r\n  <groupId>com.synnapps</groupId>\r\n  <artifactId>carouselview</artifactId>\r\n  <version>0.0.7</version>\r\n  <type>pom</type>\r\n</dependency>\r\n```\r\n\r\nUsage\r\n--------\r\n\r\n####Include following code in your layout:\r\n\r\n```xml\r\n    <com.synnapps.carouselview.CarouselView\r\n        android:id=\"@+id/carouselView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"200dp\"\r\n        app:fillColor=\"#FFFFFFFF\"\r\n        app:pageColor=\"#00000000\"\r\n        app:radius=\"6dp\"\r\n        app:slideInterval=\"3000\"\r\n        app:strokeColor=\"#FF777777\"\r\n        app:strokeWidth=\"1dp\"/>\r\n```\r\n####Include following code in your activity:\r\n```java\r\npublic class SampleCarouselViewActivity extends AppCompatActivity {\r\n\r\n    CarouselView carouselView;\r\n\r\n    int[] sampleImages = {R.drawable.image_1, R.drawable.image_2, R.drawable.image_3, R.drawable.image_4, R.drawable.image_5};\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_sample_carousel_view);\r\n\r\n        carouselView = (CarouselView) findViewById(R.id.carouselView);\r\n        carouselView.setPageCount(sampleImages.length);\r\n\r\n        carouselView.setImageListener(imageListener);\r\n    }\r\n\r\n    ImageListener imageListener = new ImageListener() {\r\n        @Override\r\n        public void setImageForPosition(int position, ImageView imageView) {\r\n            imageView.setImageResource(sampleImages[position]);\r\n        }\r\n    };\r\n\r\n}\r\n```\r\n\r\n####If you want to add custom view, implement ```ViewListener```.\r\n```java\r\n\r\npublic class SampleCarouselViewActivity extends AppCompatActivity {\r\n\r\n    CarouselView customCarouselView;\r\n    int NUMBER_OF_PAGES = 5;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_sample_carousel_view);\r\n\r\n        customCarouselView = (CarouselView) findViewById(R.id.customCarouselView);\r\n        customCarouselView.setPageCount(NUMBER_OF_PAGES);\r\n        // set ViewListener for custom view \r\n        customCarouselView.setViewListener(viewListener);\r\n    }\r\n\r\n    ViewListener viewListener = new ViewListener() {\r\n    \r\n        @Override\r\n        public View setViewForPosition(int position) {\r\n            View customView = getLayoutInflater().inflate(R.layout.view_custom, null);\r\n            //set view attributes here\r\n            \r\n            return customView;\r\n        }\r\n    };\r\n\r\n```\r\n\r\n####Supported xml Attributes\r\n\r\n| Attribute          \t                    | Description          \t\t\t\t\t\t\t   \t\t\t  \t\t | Values \t\t\t\t  |\r\n| ------------------------------------------|--------------------------------------------------------------------|------------------------|\r\n| app:slideInterval \t                    | Interval per page in milliseconds. \t\t\t   \t\t      \t\t | integer\t\t\t\t  |\r\n| app:indicatorGravity                      | Gravity of the indicator.  (Just like layout_gravity) \t\t\t | gravity                |\r\n| app:indicatorOrientation                  | Orientation of the indicator. \t\t\t\t\t   \t\t\t  \t | [horizontal, vertical] |\r\n| app:fillColor\t  \t\t                    | Color of the filled circle that represents the current page. \t\t | color \t\t\t\t  |\r\n| app:pageColor   \t\t                    | Color of the filled circles that represents pages. \t\t  \t\t | color \t\t\t\t  |\r\n| app:radius \t\t\t                    | Radius of the circles. This is also the spacing between circles.   | dimension \t\t\t  |\r\n| app:snap \t\t\t\t                    | Whether or not the selected indicator snaps to the circles. \t\t | boolean \t\t\t\t  |\r\n| app:strokeColor \t\t                    | Width of the stroke used to draw the circles. \t\t\t\t\t | color \t\t\t\t  |\r\n| app:autoPlay                              | Whether or not to auto play. Default: true                         | boolean                |\r\n| app:disableAutoPlayOnUserInteraction      | Disables autoPlay when user interacts. Default: false              | boolean                |\r\n| app:indicatorMarginHorizontal \t\t\t| Sets horizontal margin for Indicator in Carousel View              | dimension \t\t\t  |\r\n| app:indicatorMarginVertical \t\t\t    | Sets vertical margin for Indicator in Carousel View                | dimension \t\t\t  |\r\n\r\n_Note:_ Add ```xmlns:app=\"http://schemas.android.com/apk/res-auto\"``` in your layout's root view.\r\n\r\n\r\nDeveloped By\r\n--------\r\n- Sayyam Mehmood\r\n- Muhammad Rehan\r\n\r\nSpecial Thanks\r\n--------\r\n\r\nThis library uses code snippet from Jake Wharton's [ViewPagerIndicator](https://github.com/JakeWharton/ViewPagerIndicator) to display page indicator.\r\n\r\nLicense\r\n--------\r\n\r\n    Copyright 2016 Sayyam.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and \r\n    limitations under the License.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}